module.exports = {
  env: {
    browser: true,
    node: true,
    es2021: true,
    jest: true,
  },
  extends: [
    'eslint:recommended',
    'next',
    'airbnb',
    'airbnb-typescript',
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 13,
    sourceType: 'module',
    tsconfigRootDir: __dirname,
    project: ['./tsconfig.json'],
  },
  plugins: ['@typescript-eslint'],
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    'linebreak-style': ['error', 'unix'],
    quotes: ['error', 'single'],
    semi: ['warn', 'always'],
    'key-spacing': ['error', { beforeColon: false, afterColon: true }],
    'arrow-spacing': 'error',
    'space-before-blocks': 'error',
    'keyword-spacing': 'off',
    'no-multi-spaces': 'error',
    'arrow-parens': 'warn',
    'consistent-return': 'warn',
    'default-param-last': 'warn',
    'no-empty': 'warn',
    'no-confusing-arrow': 'warn',
    'no-unused-vars': 'warn',
    'no-underscore-dangle': 'off',
    'no-nested-ternary': 'warn',
    'no-redeclare': 'off',
    'no-restricted-globals': 'off',
    'prefer-destructuring': 'off',
    radix: 'off',
    'jsx-a11y/alt-text': 'warn',
    'jsx-a11y/anchor-is-valid': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/no-static-element-interactions': 'off',
    'import/extensions': [
      'off',
      'ignorePackages',
      { js: 'never', jsx: 'never', ts: 'never', tsx: 'never' },
    ],
    '@typescript-eslint/no-redeclare': 'warn',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-var-requires': 0,
    '@typescript-eslint/no-empty-interface': [
      'error',
      { allowSingleExtends: true },
    ],
    '@typescript-eslint/keyword-spacing': ['error'],
    '@typescript-eslint/no-shadow': 'warn',
    'no-shadow': 'off',
    'import/no-cycle': 'off',
    'consistent-return': 'off',
    'import/no-named-as-default': 'off',
    'no-param-reassign': ['error', { props: false }],
  },
};
